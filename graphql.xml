<?xml version="1.0" encoding="UTF-8"?>

<mapper>

	<graphql id="test_api">
		<![CDATA[
			query{
			  repository(owner:"MurphyL", name:"murphyl.com") {
			    id
			  }
			}
		]]>
	</graphql>

	<graphql id="fetch_post_issues">
		<![CDATA[
			query(
				$owner: String!, 
				$repo: String!, 
				$type: [String!], 
				$cursor: String, 
				$size: Int!
			) {
			  repository(owner: $owner, name: $repo) {
			    issues(
				    first: $size, 
				    labels: $type, 
				    states: CLOSED, 
				    #PAGE_DIRECTION#: $cursor,
				    filterBy: {
				    	assignee: $owner
				    }, orderBy: {
				    	field: CREATED_AT, direction: DESC
				    }
			    ) {
			      nodes {
			        id,
			        number,
			        title,
			        body,
			        closedAt,
			        labels(first: 10) {
			          nodes {
			            name,
			            color,
			            description
			          }
			        },
			        reactionGroups {
			          content,
			          createdAt,
			          users(first: 5) {
			            totalCount
			            nodes {
			              name
			            }
			          }
			        },
			        author {
			          login
			        },
			      	comments(first: 10) {
			      	  nodes {
			      	    author {
			      	      login
			      	    },
			      	    id,
			      	    bodyText,
			      	    publishedAt,
			      	    reactionGroups {
			      	      content,
			      	      createdAt,
			      	      users(first: 5) {
			      	        totalCount,
			      	        nodes {
			      	          name
			      	        }
			      	      }
			      	    }
			      	  }
			      	}
			      },
			      totalCount,
			      pageInfo {
			        hasPreviousPage,
			        hasNextPage,
			        startCursor,
			        endCursor
			      }
			    }
			  }
			}
		]]>
	</graphql>

	<graphql id="get_post_issue_detail">
		<![CDATA[
			query ($id: ID!) {
			  meta {
			    hookIpAddresses
			  }
			  node(id: $id) {
			    ... on Issue {
			      id,
			      number,
			      title,
			      body,
			      closedAt,
			      labels(first: 10) {
			        nodes {
			          name,
			          color,
			          description
			        }
			      },
			      reactionGroups {
			        content,
			        createdAt,
			        users(first: 5) {
			          totalCount
			          nodes {
			            name
			          }
			        }
			      },
			      author {
			        login
			      },
			      comments(first: 10) {
			        nodes {
			          author {
			            login
			          },
			          id,
			          bodyText,
			          publishedAt,
			          reactionGroups {
			            content,
			            createdAt,
			            users(first: 5) {
			              totalCount,
			              nodes {
			                name
			              }
			            }
			          }
			        }
			      }
			    }
			  }
			}
		]]>
	</graphql>

	<graphql id="fetch_code_issues">
		<![CDATA[
			query(
				$owner: String!, 
				$repo: String!, 
				$type: [String!], 
				$size: Int!
			) {
			  repository(owner: $owner, name: $repo) {
			    issues(
				    first: $size, 
				    labels: $type, 
				    states: CLOSED, 
				    filterBy: {
				    	assignee: $owner
				    }, orderBy: {
				    	field: CREATED_AT, direction: DESC
				    }
			    ) {
			      nodes {
			        id,
			        url,
			        number,
			        title,
			        body,
			        closedAt,
			        labels(first: 10) {
			          nodes {
			            name,
			            color,
			            description
			          }
			        },
			      	comments(first: 100) {
			      	  nodes {
			      	    author {
			      	      login
			      	    },
			      	    id,
			      	    body,
			      	    publishedAt
			      	  }
			      	}
			      },
			      totalCount
			    }
			  }
			}
		]]>
	</graphql>
</mapper>